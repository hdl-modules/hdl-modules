Added

* Implement our own lightweight :ref:`common.axi_stream_protocol_checker` that greatly reduces CPU
  cycles consumed during simulation.

* Add :ref:`axi.axi_read_range_checker` and :ref:`axi.axi_write_range_checker`.

* Add ``user`` port to :ref:`common.width_conversion`.

Fixes

* Fix bug in :ref:`reg_file.axi_lite_register_file` where a non-zero default value for a register of type
  ``wpulse`` or ``r_wpulse`` would only be asserted on ``regs_down`` the very first clock cycle.

* Fix bug where :ref:`axi.axi_read_throttle` could lower ``ARVALID`` without an AR transaction
  having occurred.

Breaking changes

* Remove unused ``addr_width`` generic from :ref:`bfm.axi_read_master`
  and :ref:`bfm.axi_write_master`.

* Rename :ref:`axi_lite.axi_lite_mux` generic ``slave_addrs`` to ``base_addresses`` and change type
  to ``addr_vec_t``, i.e. a list of base addresses.
  Same for :ref:`axi_lite.axi_lite_to_vec` generic ``axi_lite_slaves``.
  The address mask is now calculated internally.

* Rename optional :ref:`bfm.axi_write_master` generic ``set_axi3_w_id`` to ``enable_axi3``.

* Remove optional ``rule_4_performance_check_max_waits`` generic from :ref:`bfm.handshake_master`
  and :ref:`bfm.handshake_slave` which is not needed by
  new :ref:`common.axi_stream_protocol_checker`.

* Break :ref:`axi <module_axi>` module into :ref:`axi_lite <module_axi_lite>` and
  :ref:`axi_stream <module_axi_stream>`.

  * Move from :ref:`axi <module_axi>` to :ref:`axi_lite <module_axi_lite>`:

    * :ref:`axi_lite.axi_lite_cdc`.
    * :ref:`axi_lite.axi_lite_mux`.
    * :ref:`axi_lite.axi_lite_pipeline`.
    * :ref:`axi_lite.axi_lite_pkg`.
    * :ref:`axi_lite.axi_lite_simple_read_crossbar`.
    * :ref:`axi_lite.axi_lite_simple_write_crossbar`.
    * :ref:`axi_lite.axi_lite_to_vec`.
    * :ref:`axi_lite.axi_to_axi_lite_vec`.
    * :ref:`axi_lite.axi_to_axi_lite`.

  * Move from :ref:`axi <module_axi>` to :ref:`axi_stream <module_axi_stream>`:

    * :ref:`axi_stream.axi_stream_fifo`.
    * :ref:`axi_stream.axi_stream_pkg`.
